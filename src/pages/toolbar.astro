---
import Base from "../components/base.astro";
---

<Base>
	<main>
		<button class="record">
			<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="4" stroke-linecap="round" stroke-linejoin="round">
				<circle cx="12" cy="12" r="10"></circle>
			</svg>
		</button>
		<div id="stopwatch" class="hidden">00:00</div>
	</main>
</Base>

<style>

	#stopwatch{
		font-size: 2rem;
		position: relative;
		left: 60px;
		color: white;
		-webkit-text-stroke: 1px rgb(255, 29, 157);
		width: 60px;
	}

	button {
		width: 3rem;
		height: 3rem;
		display: flex;
		align-items: center;
		justify-content: center;
		position: absolute;
		background: rgb(255, 29, 157);
		border: 2px solid rgba(0,0,0,0.4);
		outline: none;
		border-radius: 50%;
		/* transition: transform 0.1s ease-out; */
		transition: transform 0.4s cubic-bezier(.47,1.64,.41,.8);
		transform: scale(1);
		overflow: hidden;
		cursor: pointer;
		margin: .2em;
		box-shadow: 1px 1px 24px 4px rgba(255, 29, 155, 0);
	}

	button:hover {
		transform: scale(1.05);
		box-shadow: 1px 1px 24px 4px rgba(255, 29, 155, 0.2);
	}

	button:active {
		transform: scale(0.95);
	}

	.hidden {
		transform: scale(0);
	}

	button::before {
		content: "";
		position: absolute;
		top: 0;
		width: 100%;
		height: 100%;
		background: linear-gradient(
		120deg,
			transparent,
			rgba(255, 255, 255, 0.2),
			transparent
		);
		left: -100%;
		transition: all 0.3s ease-in-out;
	}

	button:hover::before {
		left: 100%;
	}

	@-webkit-keyframes shine {
		0% {
			left: -100%;
			transition-property: left;
		}
		11.5044247788%, 100% {
			left: 100%;
			transition-property: left;
		}
	}

	@keyframes shine {
		0% {
			left: -100%;
			transition-property: left;
		}
		11.5044247788%, 100% {
			left: 100%;
			transition-property: left;
		}
	}
</style>

<script>
	import { getAll } from '@tauri-apps/api/window';
	import { invoke } from '@tauri-apps/api/tauri';
	import { listen } from '@tauri-apps/api/event';

	const buttonEl = document.querySelector('.record');
	const stopwatchEl = document.getElementById('stopwatch');

	let isRecording = false;
	let area: number[];
	let timer: number | undefined;
	let seconds = 0;
	let minutes = 0;

	function updateTime() {
		seconds++;
		if (seconds === 60) {
			seconds = 0;
			minutes++;
		}
		updateDisplay();
	}

	function updateDisplay() {
		const timeString = `${formatTime(minutes)}:${formatTime(seconds)}`;
		if (stopwatchEl) {
			stopwatchEl.innerText = timeString;
		}
	}

	function formatTime(time: number) {
		return time < 10 ? `0${time}` : time;
	}

	function closeAllWindows() {
	getAll().forEach(win => win.hide());
	}

	document.addEventListener('keydown', (e) => {
	if (e.key === 'Escape') {
		closeAllWindows();
	}
	});

	listen('capturing_area', (event) => {
		console.log("Capturing Area ", event);
		area = event.payload as number[];
	});

	if (buttonEl) {
	buttonEl.addEventListener('click', () => {
		if (isRecording) {
			isRecording = false;
			buttonEl.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="4" stroke-linecap="round" stroke-linejoin="round">
				<circle cx="12" cy="12" r="10"></circle>
			</svg>`;
			stopwatchEl?.classList.add("hidden");
			clearInterval(timer);
			seconds = 0;
			minutes = 0;
			updateDisplay();
			invoke('stop_capture', {}).then(() => {
				console.log("recording stopped");
			});
			return;
		}

		console.log("selected area: ", area);
		const isSelectionValid = true;
		console.log(isRecording);
		if (isSelectionValid) {
			isRecording = true;
			buttonEl.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="4" stroke-linecap="round" stroke-linejoin="round">
				<rect x="2" y="2" width="20" height="20"></rect>
			</svg>`;
			stopwatchEl?.classList.remove("hidden");
			timer = setInterval(updateTime, 1000);
			invoke('start_capture', { area: area }).then(() => {
				console.log("recording started");
			});
		}
	});
	}


</script>